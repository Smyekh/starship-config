# ─── STARSHIP CONFIG: POWERLINE STYLE WITH DEV INTELLIGENCE ─────────────
format = """
[](bg:#030B16 fg:#7DF9AA)
[󰀵 ](bg:#7DF9AA fg:#090c0c)
[](fg:#7DF9AA bg:#1C3A5E)
$time
[](fg:#1C3A5E bg:#3B76F0)
$directory
[](fg:#3B76F0 bg:#FCF392)
$git_branch$git_status
[](fg:#FCF392 bg:#030B16)
$custom.task_runner$custom.javascript_typescript$custom.react$custom.react_native$custom.expo$custom.vite$custom.flet$custom.dev_ports$custom.api_port$custom.reload_status$custom.docker_ports$nodejs$cmd_duration$jobs$memory_usage$battery$os$kubernetes
[](fg:#030B16 bg:none)
$character
"""

[directory]
format = "[ ﱮ $path ]($style)"
style = "fg:#E4E4E4 bg:#3B76F0"

[git_branch]
symbol = "🌿 "
style = "fg:#1C3A5E bg:#FCF392"
format = '[ $symbol$branch(:$remote_branch) ]($style)'

[git_status]
style = "fg:#1C3A5E bg:#FCF392"
format = '[$all_status]($style)'
conflicted = "💥"
ahead = "🚀"
behind = "🔙"
diverged = "🔀"
untracked = "🆕"
stashed = "📦"
modified = "✏️"
staged = "🗂️"
renamed = "📛"
deleted = "🗑️"

[time]
disabled = false
time_format = "%R"
style = "bg:#1C3A5E fg:#8DFBD2"
format = '[[ 󱑍 $time ](bg:#1C3A5E fg:#8DFBD2)]($style)'

[cmd_duration]
min_time = 1000
format = "[  $duration ](bold yellow)"

[jobs]
symbol = "⚙️"
style = "bold blue"
format = "[$symbol $number]($style)"

[memory_usage]
disabled = false
threshold = -1
symbol = ""
style = "bold dimmed white"
format = "[$symbol $ram]($style)"

[battery]
disabled = false
full_symbol = "🔋"
charging_symbol = "⚡"
discharging_symbol = "🔌"
unknown_symbol = "❓"
empty_symbol = "🪫"
format = "[$symbol $percentage]($style)"
style = "bold green"

[os]
disabled = false
style = "bold white"
format = "[ $name]($style)"

[kubernetes]
disabled = false
format = "[⛵ $context ($namespace)](bold purple)"

[character]
success_symbol = '[ ➜](bold green) '
error_symbol = '[ ✗](#E84D44) '

# ─── CUSTOM: JavaScript / TypeScript Toggle ──────────────────
[custom.javascript_typescript]
command = '''
if [[ -f tsconfig.json || $(ls *.ts 2>/dev/null) ]]; then
  echo "🧪 TS"
elif [[ -f package.json || $(ls *.js 2>/dev/null) ]]; then
  echo "📜 JS"
fi
'''
shell = ["zsh"]
style = "bold cyan"
format = "[$output]($style) "

# ─── CUSTOM: React ───────────────────────────────────────────
[custom.react]
command = 'grep -q "react" package.json 2>/dev/null && echo "⚛️ React"'
shell = ["zsh"]
style = "bold blue"
format = "[$output]($style) "

# ─── CUSTOM: React Native ────────────────────────────────────
[custom.react_native]
command = 'grep -q "react-native" package.json 2>/dev/null && echo "📱 RN"'
shell = ["zsh"]
style = "bold magenta"
format = "[$output]($style) "

# ─── CUSTOM: Expo ────────────────────────────────────────────
[custom.expo]
command = '[[ -f app.json || -f app.config.js || $(grep -q "expo" package.json 2>/dev/null) ]] && echo "🧬 Expo"'
shell = ["zsh"]
style = "bold green"
format = "[$output]($style) "

# ─── CUSTOM: Vite ────────────────────────────────────────────
[custom.vite]
command = 'grep -q "vite" package.json 2>/dev/null && echo "⚡ Vite"'
shell = ["zsh"]
style = "bold yellow"
format = "[$output]($style) "

# ─── CUSTOM: Frontend Dev Ports (Clickable) ──────────────────
[custom.dev_ports]
command = '''
ports=$(lsof -nP -iTCP -sTCP:LISTEN 2>/dev/null | awk '{print $1 " " $9}' | grep -E ":(3000|5173|8080|19000|19006)")
output=""
while read -r line; do
  app=$(echo $line | awk '{print $1}')
  port=$(echo $line | awk '{print $2}' | cut -d ":" -f2)
  case "$port" in
    3000) label="React" ;;
    5173) label="Vite" ;;
    8080) label="Frontend" ;;
    19000) label="Expo" ;;
    19006) label="Expo QR" ;;
    *) label="Dev" ;;
  esac
  output+="${output:+, }\\e]8;;http://localhost:$port\\a🌐 $label:$port\\e]8;;\\a"
done <<< "$ports"

echo -e "$output"
'''
shell = ["zsh"]
style = "bold green"
format = "$output "

# ─── CUSTOM: API Backend Ports (Clickable) ───────────────────
[custom.api_port]
command = '''
ports=$(lsof -nP -iTCP -sTCP:LISTEN 2>/dev/null | awk '{print $1 " " $9}' | grep -E ":(8000|5000|3333|4000)")
output=""
while read -r line; do
  app=$(echo $line | awk '{print $1}')
  port=$(echo $line | awk '{print $2}' | cut -d ":" -f2)
  case "$port" in
    8000) label="FastAPI" ;;
    5000) label="Flask" ;;
    3333) label="NestJS" ;;
    4000) label="GraphQL" ;;
    *) label="API" ;;
  esac
  output+="${output:+, }\\e]8;;http://localhost:$port\\a🚀 $label:$port\\e]8;;\\a"
done <<< "$ports"

echo -e "$output"
'''
shell = ["zsh"]
style = "bold yellow"
format = "$output "

# ─── CUSTOM: Auto-reload Detection 🔁 ─────────────────────────
[custom.reload_status]
command = '''
ps aux | grep -E "vite|nodemon|uvicorn.*--reload|expo start|next dev|uv run" | grep -v grep >/dev/null && echo "🔁"
'''
shell = ["zsh"]
style = "bold red"
format = "$output "

# ─── CUSTOM: Docker Ports (Localhost-bound) ──────────────────
[custom.docker_ports]
command = '''
containers=$(docker ps --format "{{.Names}} {{.Ports}}" 2>/dev/null | grep -E "0.0.0.0|127.0.0.1")
output=""
while read -r line; do
  name=$(echo $line | awk '{print $1}')
  ports=$(echo $line | cut -d " " -f2- | grep -oE "[0-9]+->" | tr -d "->" | tr "\n" "," | sed 's/,$//')
  emoji="📦"
  [[ "$name" == *"postgres"* ]] && emoji="🐘"
  [[ "$name" == *"mysql"* ]] && emoji="🛢️"
  [[ "$name" == *"redis"* ]] && emoji="🧠"
  [[ "$name" == *"web"* || "$name" == *"frontend"* ]] && emoji="🌐"
  [[ "$name" == *"api"* || "$name" == *"backend"* ]] && emoji="🚀"
  output+="${output:+, }$emoji $name:$ports"
done <<< "$containers"
echo "$output"
'''
shell = ["zsh"]
style = "bold blue"
format = "[$output]($style) "

# ─── CUSTOM: Task Runner Detection ───────────────────────────
[custom.task_runner]
command = '''
[[ -f Justfile ]] && echo "🧃 just" || ([[ -f Makefile ]] && echo "🛠️ make") || ([[ -f Taskfile.yml ]] && echo "📋 task")
'''
shell = ["zsh"]
style = "bold cyan"
format = "[$output]($style) "

# ─── CUSTOM: uv Package Manager ──────────────────────────────
[custom.uv]
command = 'command -v uv &>/dev/null && echo "🧪 uv"'
shell = ["zsh"]
style = "bold purple"
format = "[$output]($style) "

# ─── CUSTOM: Locust Load Testing ─────────────────────────────
[custom.locust]
command = '''
ps aux | grep -E "locust" | grep -v grep &>/dev/null && echo -e "\\e]8;;http://localhost:8089\\a🐜 locust\\e]8;;\\a"
'''
shell = ["zsh"]
style = "bold red"
format = "$output "

# ─── CUSTOM: Maturin ─────────────────────────────────────────
[custom.maturin]
command = 'command -v maturin &>/dev/null && echo "🦀 maturin"'
shell = ["zsh"]
style = "bold red"
format = "[$output]($style) "

# ─── CUSTOM: Cargo ───────────────────────────────────────────
[custom.cargo]
command = 'command -v cargo &>/dev/null && echo "⚙️ cargo"'
shell = ["zsh"]
style = "bold yellow"
format = "[$output]($style) "

# ─── CUSTOM: Flet (Detection + Port Link) ────────────────────
[custom.flet]
command = '''
ps aux | grep -E "flet" | grep -v grep &>/dev/null && echo -e "\\e]8;;http://localhost:8550\\a🖥️ flet\\e]8;;\\a"
'''
shell = ["zsh"]
style = "bold cyan"
format = "$output "
